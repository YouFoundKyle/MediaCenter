version: '3.7'
services:

    # https://hub.docker.com/r/plexinc/pms-docker
    plex:
        container_name: plex
        image: plexinc/pms-docker:latest
        restart: unless-stopped
        environment:
            PLEX_UID: '${PUID}'
            PLEX_GID: '${PGID}'
            TZ: '${TZ}'
            PLEX_CLAIM: '${PLEX_CLAIM}'
        networks:
            - traefik
        ports:
            - "32400:32400"
            - "32400:32400/udp"
            - "32469:32469"
            - "32469:32469/udp"
            - "1900:1900/udp"
        volumes:
            - '${CONFIG_DIR}/plex:/config'
            - '${MEDIA_DIR}/tv:/data/tv'
            - '${MEDIA_DIR}/movies:/data/movies'
            - '${MEDIA_DIR}/transcode:/transcode'
        labels:
            traefik.enable: true
            traefik.docker.network: traefik
            traefik.port: 32400
            traefik.http.routers.plex.entrypoints: https
            traefik.http.routers.plex.tls.certresolver: le
            traefik.http.routers.plex.rule: Host(`plex.${DOMAIN}`)
            traefik.http.routers.plex.middlewares: secureheaders 
            traefik.http.services.plex_mediaserver.loadbalancer.server.port: 32400
            traefik.http.services.plex_mediaserver.loadbalancer.server.scheme: http
    
    # https://hub.docker.com/r/linuxserver/ombi/
    ombi:
        container_name: ombi
        image: linuxserver/ombi:latest
        restart: unless-stopped
        environment:
            PUID: '${PUID}'
            PGID: '${PGID}'
            TZ: '${TZ}'
        networks:
            - traefik
            - internal
        volumes:
            - '${CONFIG_DIR}/ombi:/config'
            - '${DOWNLOADS_DIR}:/downloads'
        ports:
            - '3579:3579'
        labels:
            traefik.enable: true
            traefik.port: 3579
            traefik.docker.network: traefik
            traefik.http.routers.ombi.entrypoints: https
            traefik.http.routers.ombi.tls.certresolver: le
            traefik.http.routers.ombi.middlewares: secureheaders 
            traefik.http.routers.ombi.rule: Host(`request.${DOMAIN}`)

networks:
    traefik:
        name: traefik
        attachable: true
    internal:
        name: internal
        attachable: true
