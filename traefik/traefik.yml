################################################################
# Global configuration
################################################################
global:
  checkNewVersion: true
  sendAnonymousUsage: false

################################################################
# Entrypoints configuration
################################################################
entryPoints:
  http:
    address: ':80'
  https:
    address: ':443'
  metrics:
    address: ':8082'

################################################################
# Traefik logs configuration
################################################################
# Enabled by default and log to stdout
log:
  # Log level
  level: ERROR
  # Sets the filepath for the traefik log. If not specified, stdout will be used.
  # Intermediate directories are created if necessary.
  # filePath: log/traefik.log

  # Format is either json or common"
  format: common

################################################################
# Access logs configuration
################################################################
accessLog:
  # Sets the file path for the access log. If not specified, stdout will be used.
  # Intermediate directories are created if necessary.
  #
  # Optional
  # Default: os.Stdout
  #
  # filePath = "/path/to/log/log.txt"

  # Format is either "json" or "common".
  format: common

################################################################
# API and dashboard configuration 
################################################################
# Enable API and dashboard
api:
  dashboard: true

################################################################
# Ping configuration
################################################################
# Enable ping
ping:
  # Name of the related entry point
  entrypoint: traefik

################################################################
# Router configuration
################################################################
serversTransport:
  insecureSkipVerify: true

http:
  routers:
    http:
      middlewares: redirectscheme

################################################################
# Middleware configuration
################################################################
  middlewares:
    secureheaders:
      headers:
        stsSeconds: 15552000
        framedeny: true
        sslForceHost: true
        sslRedirect: true
        stsIncludeSubdomains: true
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        stsPreload: true
        customFrameOptionsValue: SAMEORIGIN
        customResponseHeaders:
          X-Robots-Tag: none
    internal:
      ipWhiteList:
        sourceRange:
          - 192.168.0.0/24
    redirectscheme:
      redirectscheme:
        scheme: https

################################################################
# Docker configuration backend
################################################################
providers:
  docker:
    exposedByDefault: false
    network: traefik
certificatesResolvers:
  le:
    acme:
      # File or key used for certificates storage.
      storage: /cert/acme.json
      keyType: RSA4096
      # Choose the Certificate Authority Server to be used for Let's Encrypt
      caServer: 'https://acme-v02.api.letsencrypt.org/directory'
      # Use a DNS-01 ACME challenge rather than HTTP-01 challenge.
      # Note: mandatory for wildcard certificate generation.
      dnsChallenge:
        provider: cloudflare
        delayBeforeCheck: 0
        resolvers:
          - '1.1.1.1:53'
          - '1.0.0.1:53'

################################################################
# Metrics configuration
################################################################
metrics:
    # To enable Traefik to export internal metrics to Prometheus

  prometheus:
    entryPoint: traefik
    buckets:
      - 0.1
      - 0.3
      - 1.2
      - 5
    addEntryPointsLabels: true
    addServicesLabels: true
