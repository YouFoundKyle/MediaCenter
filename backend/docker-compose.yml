version: '3.7'
services:

    # https://hub.docker.com/r/binhex/arch-qbittorrentvpn
    qbittorrent:
        container_name: qbittorrent
        image: binhex/arch-qbittorrentvpn:latest
        restart: unless-stopped
        privileged: true
        environment:
            PUID: '${PUID}'
            PGID: '${PGID}'
            LAN_NETWORK: '${LAN_NETWORK}'
            VPN_ENABLED: 'yes'
            VPN_PROV: 'pia'
            VPN_USER: '${VPN_USER}'
            VPN_PASS: ' ${VPN_PASS}'
            WEBUI_PORT: '6880'
            NAME_SERVERS: '${NAME_SERVERS}'
            STRICT_PORT_FORWARD: 'no'
            ENABLE_PRIVOXY: 'no'
            DEBUG: 'false'
            UMASK: '002'
        networks:
            - internal
        volumes:
            - '${CONFIG_DIR}/qbittorrent:/config'
            - '${DOWNLOADS_DIR}:/downloads'
            - '/etc/localtime:/etc/localtime:ro'
        ports:
            - '6881:6881'
            - '6881:6881/udp'
            - '6880:6880'
        labels:
            traefik.enable: true
            traefik.port: 6880
            traefik.docker.network: internal
            traefik.http.routers.qbit.entrypoints: http
            traefik.http.routers.qbit.rule: Host(`qbit.${LOCAL_DOMAIN}`)
            traefik.http.routers.qbit.middlewares: internal

    # https://hub.docker.com/r/linuxserver/jackett/
    jackett:
        container_name: jackett
        image: linuxserver/jackett:latest
        restart: unless-stopped
        environment:
            PUID: '${PUID}'
            PGID: '${PGID}'
            TZ: '${TZ}'
            AUTO_UPDATE: 'true'
        networks:
            - internal
        volumes:
            - '${CONFIG_DIR}/jackett:/config'
            - '${DOWNLOADS_DIR}/queue:/downloads'
        ports:
            - '9117:9117/tcp'
        labels:
            traefik.enable: true
            traefik.port: 9117
            traefik.docker.network: internal
            traefik.http.routers.jackett.entrypoints: http
            traefik.http.routers.jackett.rule: Host(`jackett.${LOCAL_DOMAIN}`)
            traefik.http.routers.jackett.middlewares: internal

    # https://hub.docker.com/r/linuxserver/bazarr/
    bazarr:
        container_name: bazarr
        image: linuxserver/bazarr:latest
        restart: unless-stopped
        environment:
            PUID: '${PUID}'
            PGID: '${PGID}'
            TZ: '${TZ}'
            UMASK: '002'
        networks:
            - internal
        volumes:
            - '${CONFIG_DIR}/bazarr:/config'
            - '${MEDIA_DIR}/tv:/tv'
            - '${MEDIA_DIR}/movies:/movies'
        ports:
            - '6767:6767/tcp'
        labels:
            traefik.enable: true
            traefik.port: 6767
            traefik.docker.network: internal
            traefik.http.routers.bazarr.entrypoints: http
            traefik.http.routers.bazarr.rule: Host(`bazarr.${LOCAL_DOMAIN}`)
            traefik.http.routers.bazarr.middlewares: internal

    # https://hub.docker.com/r/linuxserver/sonarr/
    sonarr:
        container_name: sonarr
        image: linuxserver/sonarr:latest
        restart: unless-stopped
        environment:
            PUID: '${PUID}'
            PGID: '${PGID}'
            TZ: '${TZ}'
            UMASK_SET: '022'    
        networks:
            - internal
        volumes:
            - '${CONFIG_DIR}/sonarr:/config'
            - '${DOWNLOADS_DIR}:/downloads'
            - '${MEDIA_DIR}/tv:/tv'
        ports:
            - '8989:8989/tcp'
        labels:
            traefik.enable: true
            traefik.port: 8989
            traefik.docker.network: internal
            traefik.http.routers.sonarr.entrypoints: http
            traefik.http.routers.sonarr.rule: Host(`sonarr.${LOCAL_DOMAIN}`)
            traefik.http.routers.sonarr.middlewares: internal


    # https://hub.docker.com/r/linuxserver/radarr/
    radarr:
        container_name: radarr
        image: linuxserver/radarr:latest
        restart: unless-stopped
        environment:
            PUID: '${PUID}'
            PGID: '${PGID}'
            TZ: '${TZ}'
            UMASK_SET: '022'
        networks:
            - internal
        volumes:
            - '${CONFIG_DIR}/radarr:/config'
            - '${DOWNLOADS_DIR}:/downloads'
            - '${MEDIA_DIR}/movies:/movies'
        ports:
            - '7878:7878/tcp'
        labels:
            traefik.enable: true
            traefik.port: 7878
            traefik.docker.network: internal
            traefik.http.routers.radarr.entrypoints: http
            traefik.http.routers.radarr.rule: Host(`radarr.${LOCAL_DOMAIN}`)
            traefik.http.routers.radarr.middlewares: internal

networks:
    internal:
        name: internal
        attachable: true
